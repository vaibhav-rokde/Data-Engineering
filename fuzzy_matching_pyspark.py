# -*- coding: utf-8 -*-
"""fuzzy matching pyspark.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gPpx30uXkiLH6rpePwPmxcrcswj2_gVr
"""



from pyspark.sql import SparkSession
from pyspark.sql.functions import levenshtein

# Create a SparkSession
spark = SparkSession.builder \
    .appName("Fuzzy Matching") \
    .getOrCreate()

# Create the first DataFrame
data1 = [("John", 25), ("Alice", 30), ("Bob", 35)]
df1 = spark.createDataFrame(data1, ["name", "age"])

# Create the second DataFrame
data2 = [("Jon", "Los Angeles"), ("Ali", "San Francisco"), ("Robert", "New York")]
df2 = spark.createDataFrame(data2, ["name", "city"])

# Perform fuzzy matching join using levenshtein distance
join_condition = levenshtein(df1["name"], df2["name"]) < 2
result = df1.join(df2, join_condition, "inner")

# Show the result
result.show()